// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Person struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   int32    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Person) Reset()         { *m = Person{} }
func (m *Person) String() string { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()    {}
func (*Person) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_f3a59211b6f32b0d, []int{0}
}
func (m *Person) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person.Unmarshal(m, b)
}
func (m *Person) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person.Marshal(b, m, deterministic)
}
func (dst *Person) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person.Merge(dst, src)
}
func (m *Person) XXX_Size() int {
	return xxx_messageInfo_Person.Size(m)
}
func (m *Person) XXX_DiscardUnknown() {
	xxx_messageInfo_Person.DiscardUnknown(m)
}

var xxx_messageInfo_Person proto.InternalMessageInfo

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Person) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Person) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type Request struct {
	ReqId                int32    `protobuf:"varint,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_f3a59211b6f32b0d, []int{1}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetReqId() int32 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func init() {
	proto.RegisterType((*Person)(nil), "protos.Person")
	proto.RegisterType((*Request)(nil), "protos.Request")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PersonInfoProviderClient is the client API for PersonInfoProvider service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PersonInfoProviderClient interface {
	GetPersonInfo(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Person, error)
}

type personInfoProviderClient struct {
	cc *grpc.ClientConn
}

func NewPersonInfoProviderClient(cc *grpc.ClientConn) PersonInfoProviderClient {
	return &personInfoProviderClient{cc}
}

func (c *personInfoProviderClient) GetPersonInfo(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Person, error) {
	out := new(Person)
	err := c.cc.Invoke(ctx, "/protos.PersonInfoProvider/GetPersonInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PersonInfoProviderServer is the server API for PersonInfoProvider service.
type PersonInfoProviderServer interface {
	GetPersonInfo(context.Context, *Request) (*Person, error)
}

func RegisterPersonInfoProviderServer(s *grpc.Server, srv PersonInfoProviderServer) {
	s.RegisterService(&_PersonInfoProvider_serviceDesc, srv)
}

func _PersonInfoProvider_GetPersonInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonInfoProviderServer).GetPersonInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.PersonInfoProvider/GetPersonInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonInfoProviderServer).GetPersonInfo(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _PersonInfoProvider_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.PersonInfoProvider",
	HandlerType: (*PersonInfoProviderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPersonInfo",
			Handler:    _PersonInfoProvider_GetPersonInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_service_f3a59211b6f32b0d) }

var fileDescriptor_service_f3a59211b6f32b0d = []byte{
	// 176 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8e, 0xcf, 0x0a, 0x82, 0x40,
	0x10, 0x87, 0xd3, 0x5a, 0xa3, 0x01, 0x0d, 0x86, 0x02, 0xe9, 0x24, 0x9e, 0x3c, 0x79, 0xb0, 0x37,
	0xe8, 0x52, 0xde, 0x64, 0x5f, 0x20, 0xac, 0x9d, 0x60, 0x21, 0xdd, 0x9c, 0xdd, 0x7c, 0xfe, 0x60,
	0xb7, 0xe8, 0x34, 0xff, 0x7e, 0x7c, 0xf3, 0x41, 0x6a, 0x89, 0x67, 0x7d, 0xa7, 0xfa, 0xc5, 0xc6,
	0x19, 0x4c, 0x7c, 0xb1, 0xe5, 0x09, 0x92, 0x8e, 0xd8, 0x9a, 0x11, 0x11, 0x56, 0x63, 0x3f, 0x50,
	0x1e, 0x15, 0x51, 0xb5, 0x91, 0xbe, 0xc7, 0x0c, 0x62, 0xad, 0xf2, 0xb8, 0x88, 0x2a, 0x21, 0x63,
	0xad, 0x70, 0x07, 0x82, 0x86, 0x5e, 0x3f, 0xf3, 0xa5, 0x0f, 0x85, 0xa1, 0x2c, 0x60, 0x2d, 0x69,
	0x7a, 0x93, 0x75, 0xb8, 0x87, 0x84, 0x69, 0xba, 0x6a, 0xe5, 0x31, 0x42, 0x0a, 0xa6, 0xa9, 0x55,
	0xcd, 0x05, 0x30, 0x7c, 0x69, 0xc7, 0x87, 0xe9, 0xd8, 0xcc, 0x5a, 0x11, 0x63, 0x03, 0xe9, 0x99,
	0xdc, 0xff, 0x80, 0xdb, 0x20, 0x67, 0xeb, 0x2f, 0xee, 0x90, 0xfd, 0x16, 0x21, 0x54, 0x2e, 0x6e,
	0xc1, 0xfb, 0xf8, 0x09, 0x00, 0x00, 0xff, 0xff, 0x6d, 0x84, 0xf6, 0xe5, 0xcf, 0x00, 0x00, 0x00,
}
